{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/davidjaa/Documents/WAD/WAD2023-HW4-Frotend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/davidjaa/Documents/WAD/WAD2023-HW4-Frotend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nexport default {\n  name: 'Post',\n  data: function data() {\n    return {\n      post: {}\n    };\n  },\n  methods: {\n    fetchPost: function fetchPost() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var postId, response, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                postId = _this.$route.params.postId;\n                _context.prev = 1;\n                _context.next = 4;\n                return fetch(\"http://localhost:3000/posts/\".concat(postId), {\n                  method: 'GET',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + document.cookie.split('=')[1]\n                  },\n                  credentials: 'include'\n                });\n              case 4:\n                response = _context.sent;\n                if (!response.ok) {\n                  _context.next = 12;\n                  break;\n                }\n                _context.next = 8;\n                return response.json();\n              case 8:\n                data = _context.sent;\n                _this.post = data;\n                _context.next = 13;\n                break;\n              case 12:\n                console.error('Failed to fetch post details');\n              case 13:\n                _context.next = 18;\n                break;\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0);\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 15]]);\n      }))();\n    },\n    formatDate: function formatDate(dateString) {\n      var date = new Date(dateString);\n      return \"\".concat(String(date.getDate()).padStart(2, '0'), \"-\").concat(String(date.getMonth() + 1).padStart(2, '0'), \"-\").concat(date.getFullYear());\n    } // Add any additional methods for post actions here\n  },\n  mounted: function mounted() {\n    this.fetchPost();\n  }\n};","map":{"version":3,"mappings":";;;;;;AAaA,eAAe;EACbA,IAAI,EAAE,MAAM;EACZC,IAAI,kBAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACDC,SAAS,uBAAG;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACVC,MAAK,GAAI,KAAI,CAACC,MAAM,CAACC,MAAM,CAACF,MAAM;gBAAA;gBAAA;gBAAA,OAEfG,KAAK,uCAAgCH,MAAM,GAAI;kBACpEI,MAAM,EAAE,KAAK;kBACbC,OAAO,EAAE;oBACP,cAAc,EAAE,kBAAkB;oBAClC,eAAe,EAAE,SAAQ,GAAIC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;kBAC3D,CAAC;kBACDC,WAAW,EAAE;gBACf,CAAC,CAAC;cAAA;gBAPIC,QAAO;gBAAA,KASTA,QAAQ,CAACC,EAAE;kBAAA;kBAAA;gBAAA;gBAAA;gBAAA,OACMD,QAAQ,CAACE,IAAI,EAAE;cAAA;gBAA5BhB,IAAG;gBACT,KAAI,CAACC,IAAG,GAAID,IAAI;gBAAA;gBAAA;cAAA;gBAEhBiB,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;cAAA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAG/CD,OAAO,CAACC,KAAK,aAAO;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAExB,CAAC;IACDC,UAAU,sBAACC,UAAU,EAAE;MACrB,IAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;MACjC,iBAAUG,MAAM,CAACF,IAAI,CAACG,OAAO,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,cAAIF,MAAM,CAACF,IAAI,CAACK,QAAQ,EAAC,GAAI,CAAC,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,cAAIJ,IAAI,CAACM,WAAW,EAAE;IACzH,CAAC,CACD;EACF,CAAC;EACDC,OAAO,qBAAG;IACR,IAAI,CAACzB,SAAS,EAAE;EAClB;AACF,CAAC","names":["name","data","post","methods","fetchPost","postId","$route","params","fetch","method","headers","document","cookie","split","credentials","response","ok","json","console","error","formatDate","dateString","date","Date","String","getDate","padStart","getMonth","getFullYear","mounted"],"sourceRoot":"","sources":["C:\\Users\\davidjaa\\Documents\\WAD\\WAD2023-HW4-Frotend\\src\\views\\Post.vue"],"sourcesContent":["<template>\r\n  <div class=\"form\">\r\n    <h3>A Post</h3>\r\n    <p class=\"date\">{{ formatDate(post.date) }}</p>\r\n    <textarea v-model=\"updatedBody\" rows=\"4\" placeholder=\"Update post body\"></textarea>\r\n    <div class=\"container\">\r\n      <button @click=\"updatePost\" class=\"center\">Update</button>\r\n      <button @click=\"deletePost\" class=\"center\">Delete</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Post',\r\n  data() {\r\n    return {\r\n      post: {},\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchPost() {\r\n      const postId = this.$route.params.postId;\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/posts/${postId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + document.cookie.split('=')[1],\r\n          },\r\n          credentials: 'include',\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          this.post = data;\r\n        } else {\r\n          console.error('Failed to fetch post details');\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    formatDate(dateString) {\r\n      const date = new Date(dateString);\r\n      return `${String(date.getDate()).padStart(2, '0')}-${String(date.getMonth() + 1).padStart(2, '0')}-${date.getFullYear()}`;\r\n    },\r\n    // Add any additional methods for post actions here\r\n  },\r\n  mounted() {\r\n    this.fetchPost();\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\nbody{\r\n  margin: 20px 40px;\r\n  font-size: 1.2rem;\r\n  letter-spacing: 1px;\r\n  background: #fafafa;\r\n  position: relative;\r\n}\r\n.post-list{\r\n  margin-bottom: 5px;\r\n  padding: 3px 5px;\r\n}\r\n.date{\r\n    margin: 0;\r\n  padding: 0;\r\n  font-family: 'Quicksand', sans-serif;\r\n  color: #444;\r\n  text-align: right;\r\n}\r\n\r\nh1, h2, h3, h4, ul, li, a, input, label, button, div, footer{\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: 'Quicksand', sans-serif;\r\n  color: #444;\r\n}\r\nnav{\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  margin-bottom: 80px;\r\n}\r\ninput{\r\n  padding: 10px 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ddd;\r\n  font-size: 1em;\r\n  width: 100%;\r\n}\r\nlabel{\r\n  display: block;\r\n  margin: 20px 0 10px;\r\n}\r\nbutton{\r\n  margin-top: 30px;\r\n  border-radius: 36px;\r\n  background: #FEE996;\r\n  border:0;\r\n  font-weight: 700;\r\n  font-size: 0.8em;\r\n  display: block;\r\n  padding: 10px 16px;\r\n  letter-spacing: 2px;\r\n}\r\nnav{\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.post {\r\n  background: rgb(189, 212, 199);\r\n  border-radius: 10px;\r\n    width: 80%;\r\n    position: relative;\r\n    padding: 20px;\r\n    margin: 5px auto;\r\n    text-align: left;\r\n}\r\n.center {\r\n  margin: auto;\r\n  border: 0;\r\n  padding: 10px 20px;\r\n  margin-top: 20px;\r\n  margin: 10px auto;\r\n  width: 30%; \r\n}\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}