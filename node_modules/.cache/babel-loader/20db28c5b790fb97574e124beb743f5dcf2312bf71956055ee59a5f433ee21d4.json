{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\n// @ is an alias to /src\nimport auth from \"../auth\";\nexport default {\n  name: \"HomeView\",\n  components: {},\n  data: function data() {\n    return {\n      posts: [],\n      authResult: auth.authenticated(),\n      selectedPostId: null\n    };\n  },\n  methods: {\n    Logout: function Logout() {\n      var _this = this;\n      fetch(\"http://localhost:3000/auth/logout\", {\n        credentials: 'include' //  Don't forget to specify this if you need cookies\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n        console.log('jwt removed');\n        //console.log('jwt removed:' + auth.authenticated());\n        _this.$router.push(\"/login\");\n        //location.assign(\"/\");\n      })[\"catch\"](function (e) {\n        console.log(e);\n        console.log(\"error logout\");\n      });\n    },\n    AddPost: function AddPost() {\n      this.$router.push(\"/addpost\");\n    },\n    DeleteAll: function DeleteAll() {\n      var _this2 = this;\n      fetch(\"http://localhost:3000/posts\", {\n        method: 'DELETE',\n        credentials: 'include' //  Don't forget to specify this if you need cookies\n      }).then(function (response) {\n        response.json();\n        console.log(response);\n      }).then(function (data) {\n        console.log(data);\n        console.log('All posts deleted');\n        _this2.posts = [];\n      })[\"catch\"](function (e) {\n        console.log(e);\n        console.log(\"error deleting all posts\");\n      });\n    },\n    goToPost: function goToPost(postId) {\n      this.$router.push(\"/post/\".concat(postId));\n    },\n    selectPost: function selectPost(postId) {\n      this.selectedPostId = postId;\n    },\n    updatePostForm: function updatePostForm(postId) {\n      // Display the update form for a specific post\n      if (this.selectedPostId === postId) {\n        // Use this.$router.push to navigate to the correct route for updating a post\n        this.$router.push({\n          name: 'EditPost',\n          params: {\n            postId: postId\n          }\n        });\n      }\n    },\n    deletePost: function deletePost(postId) {},\n    formatDate: function formatDate(dateString) {\n      var date = new Date(dateString);\n      return \"\".concat(String(date.getDate()).padStart(2, '0'), \"-\").concat(String(date.getMonth() + 1).padStart(2, '0'), \"-\").concat(date.getFullYear());\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n    fetch('http://localhost:3000/posts', {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': 'Bearer ' + document.cookie.split('=')[1] // Add this line\n      },\n\n      credentials: 'include'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return _this3.posts = data;\n    })[\"catch\"](function (err) {\n      return console.log(err.message);\n    });\n  }\n};","map":{"version":3,"mappings":"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","names":["auth","name","components","data","posts","authResult","authenticated","selectedPostId","methods","Logout","fetch","credentials","then","response","json","console","log","$router","push","e","AddPost","DeleteAll","method","goToPost","postId","selectPost","updatePostForm","params","deletePost","formatDate","dateString","date","Date","String","getDate","padStart","getMonth","getFullYear","mounted","headers","document","cookie","split","err","message"],"sourceRoot":"","sources":["C:\\Users\\davidjaa\\Documents\\WAD\\WAD2023-HW4-Frotend\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"header\">\r\n    <div class=\"container\">\r\n      <button v-if=\"authResult\" @click=\"Logout\" class=\"center\">Logout</button>\r\n    </div>\r\n    <div v-if=\"selectedPostId !== null\">\r\n      <div class=\"container\">\r\n        <button v-if=\"authResult\" @click=\"editPost(selectedPostId)\" class=\"center\">Edit Post</button>\r\n        <button v-if=\"authResult\" @click=\"deletePost(selectedPostId)\" class=\"center\">Delete Post</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"post-list\" v-for=\"post in posts\" :key=\"post.index\" @click=\"selectPost(post.id)\">\r\n      <div class=\"post\">\r\n        <p class=\"date\">{{ formatDate(post.date) }}</p>\r\n        <p><b>{{ post.body }}</b></p>\r\n      </div>\r\n    </div>\r\n    <div class=\"container\">\r\n      <button v-if=\"authResult\" @click=\"AddPost\" class=\"center\">Add Post</button>\r\n      <button v-if=\"authResult\" @click=\"DeleteAll\" class=\"center\">Delete All</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport auth from \"../auth\";\r\n\r\nexport default {\r\n  name: \"HomeView\",\r\n  components: {\r\n  },\r\n   data: function() {\r\n    return {\r\n    posts:[ ],\r\n    authResult: auth.authenticated(),\r\n    selectedPostId: null,\r\n    }\r\n  },\r\n  methods: {\r\n    Logout() {\r\n      fetch(\"http://localhost:3000/auth/logout\", {\r\n          credentials: 'include', //  Don't forget to specify this if you need cookies\r\n      })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        console.log('jwt removed');\r\n        //console.log('jwt removed:' + auth.authenticated());\r\n        this.$router.push(\"/login\");\r\n        //location.assign(\"/\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        console.log(\"error logout\");\r\n      });\r\n    },\r\n    AddPost() {\r\n      this.$router.push(\"/addpost\");\r\n    },\r\n    DeleteAll() {\r\n      fetch(\"http://localhost:3000/posts\", {\r\n          method: 'DELETE',\r\n          credentials: 'include', //  Don't forget to specify this if you need cookies\r\n      })\r\n      .then((response) => {\r\n        response.json()\r\n        console.log(response)\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        console.log('All posts deleted');\r\n        this.posts = [];\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        console.log(\"error deleting all posts\");\r\n      });\r\n    },\r\n    goToPost(postId) {\r\n      this.$router.push(`/post/${postId}`);\r\n    },\r\n\r\n    selectPost(postId){\r\n      this.selectedPostId = postId;\r\n    },\r\n\r\n\r\n    updatePostForm(postId) {\r\n      // Display the update form for a specific post\r\n      if (this.selectedPostId === postId) {\r\n        // Use this.$router.push to navigate to the correct route for updating a post\r\n        this.$router.push({ name: 'EditPost', params: { postId } });\r\n      }\r\n    },\r\n\r\n    deletePost(postId) {\r\n    },\r\n\r\n  formatDate(dateString) {\r\n  const date = new Date(dateString);\r\n  return `${String(date.getDate()).padStart(2, '0')}-${String(date.getMonth() + 1).padStart(2, '0')}-${date.getFullYear()}`;\r\n},\r\n  }, \r\n  mounted() {\r\n    fetch('http://localhost:3000/posts', {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      'Authorization': 'Bearer ' + document.cookie.split('=')[1]  // Add this line\r\n    },\r\n    credentials: 'include',\r\n  })\r\n        .then((response) => response.json())\r\n        .then(data => this.posts = data)\r\n        .catch(err => console.log(err.message))\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nbody{\r\n  margin: 20px 40px;\r\n  font-size: 1.2rem;\r\n  letter-spacing: 1px;\r\n  background: #fafafa;\r\n  position: relative;\r\n}\r\n.post-list{\r\n  margin-bottom: 5px;\r\n  padding: 3px 5px;\r\n}\r\n.date{\r\n    margin: 0;\r\n  padding: 0;\r\n  font-family: 'Quicksand', sans-serif;\r\n  color: #444;\r\n  text-align: right;\r\n}\r\n\r\nh1, h2, h3, h4, ul, li, a, input, label, button, div, footer{\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: 'Quicksand', sans-serif;\r\n  color: #444;\r\n}\r\nnav{\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  margin-bottom: 80px;\r\n}\r\ninput{\r\n  padding: 10px 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ddd;\r\n  font-size: 1em;\r\n  width: 100%;\r\n}\r\nlabel{\r\n  display: block;\r\n  margin: 20px 0 10px;\r\n}\r\nbutton{\r\n  margin-top: 30px;\r\n  border-radius: 36px;\r\n  background: #FEE996;\r\n  border:0;\r\n  font-weight: 700;\r\n  font-size: 0.8em;\r\n  display: block;\r\n  padding: 10px 16px;\r\n  letter-spacing: 2px;\r\n}\r\nnav{\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.post {\r\n  background: rgb(189, 212, 199);\r\n  border-radius: 10px;\r\n    width: 80%;\r\n    position: relative;\r\n    padding: 20px;\r\n    margin: 5px auto;\r\n    text-align: left;\r\n}\r\n.center {\r\n  margin: auto;\r\n  border: 0;\r\n  padding: 10px 20px;\r\n  margin-top: 20px;\r\n  margin: 10px auto;\r\n  width: 30%; \r\n}\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}