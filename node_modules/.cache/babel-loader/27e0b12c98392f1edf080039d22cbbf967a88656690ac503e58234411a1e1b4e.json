{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-66b2084c\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"form\"\n};\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h3\", null, \"A Post\", -1 /* HOISTED */);\n});\nvar _hoisted_3 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"label\", {\n    \"for\": \"body\"\n  }, \"Post Body\", -1 /* HOISTED */);\n});\nvar _hoisted_4 = {\n  \"class\": \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _withDirectives(_createElementVNode(\"textarea\", {\n    name: \"body\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.body = $event;\n    })\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.body]]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $options.updatePost();\n    }),\n    \"class\": \"center\"\n  }, \"Update\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = function ($event) {\n      return $options.deletePost();\n    }),\n    \"class\": \"center\"\n  }, \"Delete\")])]);\n}","map":{"version":3,"mappings":";;;;;EAEO,SAAM;AAAM;;sBACfA,oBAAe,YAAX,QAAM;AAAA;;sBACRA,oBAAmC;IAA5B,OAAI;EAAM,GAAC,WAAS;AAAA;;EAExB,SAAM;AAAW;;uBAJxBC,oBAQM,OARNC,UAQM,GAPJC,UAAe,EACbC,UAAmC,kBACnCJ,oBAAyD;IAA/CK,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAR,EAAQ;;aAAUC,SAAI;IAAA;iDAAJA,SAAI,KAC9CP,oBAGM,OAHNQ,UAGM,GAFJR,oBAA6D;IAApDS,OAAK;MAAA,OAAEC,mBAAU;IAAA;IAAK,SAAM;KAAS,QAAM,GACpDV,oBAA4D;IAAnDS,OAAK;MAAA,OAAEC,mBAAU;IAAA;IAAI,SAAM;KAAS,QAAM","names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","name","required","_ctx","_hoisted_4","onClick","$options"],"sourceRoot":"","sources":["C:\\Users\\davidjaa\\Documents\\WAD\\WAD2023-HW4-Frotend\\src\\views\\Post.vue"],"sourcesContent":["\r\n<template>\r\n  <div class=\"form\">\r\n    <h3>A Post</h3>\r\n      <label for=\"body\">Post Body</label>\r\n      <textarea name=\"body\" required v-model='body'></textarea>\r\n    <div class=\"container\">\r\n      <button @click=\"updatePost()\"  class=\"center\">Update</button>\r\n      <button @click=\"deletePost()\" class=\"center\">Delete</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Post',\r\n  data: function (){\r\n    return {\r\n      body: '',\r\n      showButtons: false,\r\n    }\r\n  },\r\n  created() {\r\n    // This is the created hook\r\n    const postId = this.$route.params.postId;\r\n    console.log(\"PostId:\", postId);\r\n    this.showButtons = Boolean(postId);\r\n  },\r\n  methods:{\r\n    async deletePost(){\r\n      try {\r\n        const postId = this.$route.params.postId;\r\n        const response = await fetch('http://your-api-url/posts/${postId}',{\r\n          method: 'DELETE',\r\n          credentials: 'include',\r\n        })\r\n\r\n        if (response.ok){\r\n          this.$router.go(-1);\r\n        }else{\r\n          console.error('Failed to delete the post');\r\n        }\r\n      }catch (error){\r\n        console.error('Error while deleting this post', error);\r\n      }\r\n    },\r\n    async updatePost(){\r\n      try{\r\n        const postId = this.$route.params.postId;\r\n        const data = {\r\n          body: this.body,\r\n        };\r\n\r\n        const response = await fetch('http://your-api-url/posts/${postId}',{\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify(data),\r\n        });\r\n\r\n        if (response.ok){\r\n          this.$router.push(\"/\");\r\n        }else{\r\n          console.error('Failed to update the post');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error while updating the post', error);\r\n      } \r\n\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh3 {\r\n  text-align: center;\r\n  color: rgb(8, 110, 110);\r\n}\r\n.form {\r\n  max-width: 420px;\r\n  margin: 30px auto;\r\n  background: rgb(216, 212, 212);\r\n  text-align: left;\r\n  padding: 40px;\r\n  border-radius: 10px;\r\n}\r\nlabel {\r\n  color: rgb(8, 110, 110);\r\n  display: inline-block;\r\n  margin: 25px 0 15px;\r\n  font-size: 0.8em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n}\r\ntextarea {\r\n  display: block;\r\n  padding: 10px 6px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-bottom: 1px solid white;\r\n}\r\nbutton {\r\n  background: rgb(8, 110, 110);\r\n  border: 0;\r\n  padding: 10px 20px;\r\n  margin-top: 20px;\r\n  color: white;\r\n  border-radius: 20px;\r\n  align-items: center;\r\n  text-align: center;\r\n}\r\n.center {\r\n  margin: auto;\r\n  border: 0;\r\n  padding: 10px 20px;\r\n  margin-top: 20px;\r\n  width: 30%;\r\n}\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}