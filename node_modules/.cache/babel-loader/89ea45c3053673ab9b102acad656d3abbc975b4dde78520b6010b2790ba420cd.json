{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/davidjaa/Documents/WAD/WAD2023-HW4-Frotend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/davidjaa/Documents/WAD/WAD2023-HW4-Frotend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'Post',\n  data: function data() {\n    return {\n      body: '',\n      showButtons: false\n    };\n  },\n  created: function created() {\n    // This is the created hook\n    var postId = this.$route.params.postId;\n    console.log(\"PostId:\", postId);\n    this.showButtons = Boolean(postId);\n  },\n  methods: {\n    deletePost: function deletePost() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var postId, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                postId = _this.$route.params.postId;\n                _context.next = 4;\n                return fetch('http://your-api-url/posts/${postId}', {\n                  method: 'DELETE',\n                  credentials: 'include'\n                });\n              case 4:\n                response = _context.sent;\n                if (response.ok) {\n                  _this.$router.go(-1);\n                } else {\n                  console.error('Failed to delete the post');\n                }\n                _context.next = 11;\n                break;\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.error('Error while deleting this post', _context.t0);\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    },\n    updatePost: function updatePost() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var postId, data, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                postId = _this2.$route.params.postId;\n                data = {\n                  body: _this2.body\n                };\n                _context2.next = 5;\n                return fetch('http://your-api-url/posts/${postId}', {\n                  method: 'PUT',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  credentials: 'include',\n                  body: JSON.stringify(data)\n                });\n              case 5:\n                response = _context2.sent;\n                if (response.ok) {\n                  _this2.$router.push(\"/\");\n                } else {\n                  console.error('Failed to update the post');\n                }\n                _context2.next = 12;\n                break;\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error('Error while updating the post', _context2.t0);\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 9]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;AAcA,eAAe;EACbA,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,gBAAW;IACf,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,OAAO,qBAAG;IACR;IACA,IAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,MAAM;IACxCG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEJ,MAAM,CAAC;IAC9B,IAAI,CAACF,WAAU,GAAIO,OAAO,CAACL,MAAM,CAAC;EACpC,CAAC;EACDM,OAAO,EAAC;IACAC,UAAU,wBAAE;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAERP,MAAK,GAAI,KAAI,CAACC,MAAM,CAACC,MAAM,CAACF,MAAM;gBAAA;gBAAA,OACjBQ,KAAK,CAAC,qCAAqC,EAAC;kBACjEC,MAAM,EAAE,QAAQ;kBAChBC,WAAW,EAAE;gBACf,CAAC;cAAA;gBAHKC,QAAO;gBAKb,IAAIA,QAAQ,CAACC,EAAE,EAAC;kBACd,KAAI,CAACC,OAAO,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACrB,CAAC,MAAI;kBACHX,OAAO,CAACY,KAAK,CAAC,2BAA2B,CAAC;gBAC5C;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAEAZ,OAAO,CAACY,KAAK,CAAC,gCAAgC,cAAQ;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAE1D,CAAC;IACKC,UAAU,wBAAE;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAERhB,MAAK,GAAI,MAAI,CAACC,MAAM,CAACC,MAAM,CAACF,MAAM;gBAClCJ,IAAG,GAAI;kBACXC,IAAI,EAAE,MAAI,CAACA;gBACb,CAAC;gBAAA;gBAAA,OAEsBW,KAAK,CAAC,qCAAqC,EAAC;kBACjEC,MAAM,EAAE,KAAK;kBACbQ,OAAO,EAAE;oBACP,cAAc,EAAE;kBAClB,CAAC;kBACDP,WAAW,EAAE,SAAS;kBACtBb,IAAI,EAAEqB,IAAI,CAACC,SAAS,CAACvB,IAAI;gBAC3B,CAAC,CAAC;cAAA;gBAPIe,QAAO;gBASb,IAAIA,QAAQ,CAACC,EAAE,EAAC;kBACd,MAAI,CAACC,OAAO,CAACO,IAAI,CAAC,GAAG,CAAC;gBACxB,CAAC,MAAI;kBACHjB,OAAO,CAACY,KAAK,CAAC,2BAA2B,CAAC;gBAC5C;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAEAZ,OAAO,CAACY,KAAK,CAAC,+BAA+B,eAAQ;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGzD;EACF;AACF,CAAC","names":["name","data","body","showButtons","created","postId","$route","params","console","log","Boolean","methods","deletePost","fetch","method","credentials","response","ok","$router","go","error","updatePost","headers","JSON","stringify","push"],"sourceRoot":"","sources":["C:\\Users\\davidjaa\\Documents\\WAD\\WAD2023-HW4-Frotend\\src\\views\\Post.vue"],"sourcesContent":["\r\n<template>\r\n  <div class=\"form\">\r\n    <h3>A Post</h3>\r\n      <label for=\"body\">Post Body</label>\r\n      <textarea name=\"body\" required v-model='body'></textarea>\r\n    <div class=\"container\">\r\n      <button @click=\"updatePost()\"  class=\"center\">Update</button>\r\n      <button @click=\"deletePost()\" class=\"center\">Delete</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Post',\r\n  data: function (){\r\n    return {\r\n      body: '',\r\n      showButtons: false,\r\n    }\r\n  },\r\n  created() {\r\n    // This is the created hook\r\n    const postId = this.$route.params.postId;\r\n    console.log(\"PostId:\", postId);\r\n    this.showButtons = Boolean(postId);\r\n  },\r\n  methods:{\r\n    async deletePost(){\r\n      try {\r\n        const postId = this.$route.params.postId;\r\n        const response = await fetch('http://your-api-url/posts/${postId}',{\r\n          method: 'DELETE',\r\n          credentials: 'include',\r\n        })\r\n\r\n        if (response.ok){\r\n          this.$router.go(-1);\r\n        }else{\r\n          console.error('Failed to delete the post');\r\n        }\r\n      }catch (error){\r\n        console.error('Error while deleting this post', error);\r\n      }\r\n    },\r\n    async updatePost(){\r\n      try{\r\n        const postId = this.$route.params.postId;\r\n        const data = {\r\n          body: this.body,\r\n        };\r\n\r\n        const response = await fetch('http://your-api-url/posts/${postId}',{\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify(data),\r\n        });\r\n\r\n        if (response.ok){\r\n          this.$router.push(\"/\");\r\n        }else{\r\n          console.error('Failed to update the post');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error while updating the post', error);\r\n      } \r\n\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh3 {\r\n  text-align: center;\r\n  color: rgb(8, 110, 110);\r\n}\r\n.form {\r\n  max-width: 420px;\r\n  margin: 30px auto;\r\n  background: rgb(216, 212, 212);\r\n  text-align: left;\r\n  padding: 40px;\r\n  border-radius: 10px;\r\n}\r\nlabel {\r\n  color: rgb(8, 110, 110);\r\n  display: inline-block;\r\n  margin: 25px 0 15px;\r\n  font-size: 0.8em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n}\r\ntextarea {\r\n  display: block;\r\n  padding: 10px 6px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-bottom: 1px solid white;\r\n}\r\nbutton {\r\n  background: rgb(8, 110, 110);\r\n  border: 0;\r\n  padding: 10px 20px;\r\n  margin-top: 20px;\r\n  color: white;\r\n  border-radius: 20px;\r\n  align-items: center;\r\n  text-align: center;\r\n}\r\n.center {\r\n  margin: auto;\r\n  border: 0;\r\n  padding: 10px 20px;\r\n  margin-top: 20px;\r\n  width: 30%;\r\n}\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}