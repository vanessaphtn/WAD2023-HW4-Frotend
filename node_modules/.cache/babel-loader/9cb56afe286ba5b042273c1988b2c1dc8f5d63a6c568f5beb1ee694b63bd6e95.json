{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/davidjaa/Documents/WAD/WAD2023-HW4-Frotend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/davidjaa/Documents/WAD/WAD2023-HW4-Frotend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nexport default {\n  name: 'Post',\n  data: function data() {\n    return {\n      post: {},\n      updatedBody: ''\n    };\n  },\n  methods: {\n    fetchPost: function fetchPost() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var postId, response, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                postId = _this.$route.params.postId;\n                _context.prev = 1;\n                _context.next = 4;\n                return fetch(\"http://localhost:3000/posts/\".concat(postId), {\n                  method: 'GET',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + document.cookie.split('=')[1]\n                  },\n                  credentials: 'include'\n                });\n              case 4:\n                response = _context.sent;\n                if (!response.ok) {\n                  _context.next = 13;\n                  break;\n                }\n                _context.next = 8;\n                return response.json();\n              case 8:\n                data = _context.sent;\n                _this.post = data;\n                _this.updatedBody = data.body; // Set the initial value for the updatedBody\n                _context.next = 14;\n                break;\n              case 13:\n                console.error('Failed to fetch post details');\n              case 14:\n                _context.next = 19;\n                break;\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0);\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 16]]);\n      }))();\n    },\n    updatePost: function updatePost() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var postId, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                postId = _this2.$route.params.postId;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return fetch(\"http://localhost:3000/posts/\".concat(postId), {\n                  method: 'PUT',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + document.cookie.split('=')[1]\n                  },\n                  credentials: 'include',\n                  body: JSON.stringify({\n                    body: _this2.updatedBody\n                  })\n                });\n              case 4:\n                response = _context2.sent;\n                if (response.ok) {\n                  console.log('Post updated successfully');\n                  // Refresh post details after update\n                  _this2.fetchPost();\n                  _this2.$router.push(\"/\");\n                } else {\n                  console.error('Failed to update post');\n                }\n                _context2.next = 11;\n                break;\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.error(_context2.t0);\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 8]]);\n      }))();\n    },\n    deletePost: function deletePost() {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var postId, response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                postId = _this3.$route.params.postId;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return fetch(\"http://localhost:3000/posts/\".concat(postId), {\n                  method: 'DELETE',\n                  headers: {\n                    'Authorization': 'Bearer ' + document.cookie.split('=')[1]\n                  },\n                  credentials: 'include'\n                });\n              case 4:\n                response = _context3.sent;\n                if (response.ok) {\n                  console.log('Post deleted successfully');\n                  // Optionally, you can navigate back to the home page after deletion\n                  _this3.$router.push('/');\n                } else {\n                  console.error('Failed to delete post');\n                }\n                _context3.next = 11;\n                break;\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](1);\n                console.error(_context3.t0);\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 8]]);\n      }))();\n    },\n    formatDate: function formatDate(dateString) {\n      var date = new Date(dateString);\n      return \"\".concat(String(date.getDate()).padStart(2, '0'), \"-\").concat(String(date.getMonth() + 1).padStart(2, '0'), \"-\").concat(date.getFullYear());\n    }\n  },\n  mounted: function mounted() {\n    this.fetchPost();\n  }\n};","map":{"version":3,"mappings":"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","names":["name","data","post","updatedBody","methods","fetchPost","postId","$route","params","fetch","method","headers","document","cookie","split","credentials","response","ok","json","body","console","error","updatePost","JSON","stringify","log","$router","push","deletePost","formatDate","dateString","date","Date","String","getDate","padStart","getMonth","getFullYear","mounted"],"sourceRoot":"","sources":["C:\\Users\\davidjaa\\Documents\\WAD\\WAD2023-HW4-Frotend\\src\\views\\Post.vue"],"sourcesContent":["<template>\r\n  <div class=\"form\">\r\n    <h3>Update Post</h3>\r\n    <label for=\"body\">Post Body</label>\r\n    <textarea v-model=\"updatedBody\" rows=\"4\"></textarea>\r\n    <div class=\"container\">\r\n      <button @click=\"updatePost\" class=\"center\">Update</button>\r\n      <button @click=\"deletePost\" class=\"center right\">Delete</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Post',\r\n  data() {\r\n    return {\r\n      post: {},\r\n      updatedBody: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchPost() {\r\n      const postId = this.$route.params.postId;\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/posts/${postId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + document.cookie.split('=')[1],\r\n          },\r\n          credentials: 'include',\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          this.post = data;\r\n          this.updatedBody = data.body; // Set the initial value for the updatedBody\r\n        } else {\r\n          console.error('Failed to fetch post details');\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    async updatePost() {\r\n      const postId = this.$route.params.postId;\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/posts/${postId}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + document.cookie.split('=')[1],\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify({ body: this.updatedBody }),\r\n        });\r\n\r\n        if (response.ok) {\r\n          console.log('Post updated successfully');\r\n          // Refresh post details after update\r\n          this.fetchPost();\r\n\r\n          this.$router.push(\"/\");\r\n        } else {\r\n          console.error('Failed to update post');\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    async deletePost() {\r\n      const postId = this.$route.params.postId;\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/posts/${postId}`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n            'Authorization': 'Bearer ' + document.cookie.split('=')[1],\r\n          },\r\n          credentials: 'include',\r\n        });\r\n\r\n        if (response.ok) {\r\n          console.log('Post deleted successfully');\r\n          // Optionally, you can navigate back to the home page after deletion\r\n          this.$router.push('/');\r\n        } else {\r\n          console.error('Failed to delete post');\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    formatDate(dateString) {\r\n      const date = new Date(dateString);\r\n      return `${String(date.getDate()).padStart(2, '0')}-${String(date.getMonth() + 1).padStart(2, '0')}-${date.getFullYear()}`;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchPost();\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.form {\r\n  max-width: 420px;\r\n  margin: 30px auto;\r\n  background: rgb(216, 212, 212);\r\n  text-align: left;\r\n  padding: 40px;\r\n  border-radius: 10px;\r\n}\r\nh3 {\r\n  text-align: center;\r\n  color: rgb(8, 110, 110);\r\n}\r\nlabel {\r\n  color: rgb(8, 110, 110);\r\n  display: inline-block;\r\n  margin: 25px 0 15px;\r\n  font-size: 0.8em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n}\r\ntextarea {\r\n  display: block;\r\n  padding: 10px 6px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-bottom: 1px solid white;\r\n}\r\nbutton {\r\n  background: rgb(8, 110, 110);\r\n  border: 0;\r\n  padding: 10px 20px;\r\n  margin-top: 20px;\r\n  color: white;\r\n  border-radius: 20px;\r\n  align-items: center;\r\n  text-align: center;\r\n}\r\n\r\n.right {\r\n  margin-right: auto;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}