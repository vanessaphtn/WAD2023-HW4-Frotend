{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/davidjaa/Documents/WAD/WAD2023-HW4-Frotend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/davidjaa/Documents/WAD/WAD2023-HW4-Frotend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nexport default {\n  name: 'Post',\n  data: function data() {\n    return {\n      body: '',\n      postId: null\n    };\n  },\n  methods: {\n    deletePost: function deletePost() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch(\"http://localhost:3000/posts/\".concat(_this.postId), {\n                  method: 'DELETE',\n                  credentials: 'include'\n                });\n              case 3:\n                response = _context.sent;\n                if (response.ok) {\n                  console.log('Post deleted successfully');\n                  // Navigate back to the home view after deletion\n                  _this.$router.push('/');\n                } else {\n                  console.error('Failed to delete post');\n                }\n                _context.next = 10;\n                break;\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error('Error deleting post:', _context.t0);\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    updatePost: function updatePost() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return fetch(\"http://localhost:3000/posts/\".concat(_this2.postId), {\n                  method: 'PUT',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  credentials: 'include',\n                  body: JSON.stringify({\n                    body: _this2.body\n                  })\n                });\n              case 3:\n                response = _context2.sent;\n                if (response.ok) {\n                  console.log('Post updated successfully');\n                  // Navigate back to the home view after updating\n                  _this2.$router.push('/');\n                } else {\n                  console.error('Failed to update post');\n                }\n                _context2.next = 10;\n                break;\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error('Error updating post:', _context2.t0);\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n    // Fetch the post details when the component is mounted\n    var postId = this.$route.params.postId;\n    this.postId = postId;\n    fetch(\"http://localhost:3000/posts/\".concat(postId), {\n      method: 'GET',\n      credentials: 'include'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      _this3.body = data.body;\n    })[\"catch\"](function (error) {\n      console.error('Error fetching post details:', error);\n    });\n  }\n};","map":{"version":3,"mappings":";;;;;AAaA,eAAe;EACbA,IAAI,EAAE,MAAM;EACZC,IAAI,kBAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACDC,UAAU,wBAAG;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEQC,KAAK,uCAAgC,KAAI,CAACH,MAAM,GAAI;kBACzEI,MAAM,EAAE,QAAQ;kBAChBC,WAAW,EAAE;gBACf,CAAC,CAAC;cAAA;gBAHIC,QAAO;gBAKb,IAAIA,QAAQ,CAACC,EAAE,EAAE;kBACfC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;kBACxC;kBACA,KAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;gBACxB,OAAO;kBACLH,OAAO,CAACI,KAAK,CAAC,uBAAuB,CAAC;gBACxC;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAEAJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,cAAQ;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEhD,CAAC;IAEKC,UAAU,wBAAG;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEQV,KAAK,uCAAgC,MAAI,CAACH,MAAM,GAAI;kBACzEI,MAAM,EAAE,KAAK;kBACbU,OAAO,EAAE;oBACP,cAAc,EAAE;kBAClB,CAAC;kBACDT,WAAW,EAAE,SAAS;kBACtBN,IAAI,EAAEgB,IAAI,CAACC,SAAS,CAAC;oBAAEjB,IAAI,EAAE,MAAI,CAACA;kBAAK,CAAC;gBAC1C,CAAC,CAAC;cAAA;gBAPIO,QAAO;gBASb,IAAIA,QAAQ,CAACC,EAAE,EAAE;kBACfC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;kBACxC;kBACA,MAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;gBACxB,OAAO;kBACLH,OAAO,CAACI,KAAK,CAAC,uBAAuB,CAAC;gBACxC;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAEAJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,eAAQ;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEhD;EACF,CAAC;EACDK,OAAO,qBAAG;IAAA;IACR;IACA,IAAMjB,MAAK,GAAI,IAAI,CAACkB,MAAM,CAACC,MAAM,CAACnB,MAAM;IACxC,IAAI,CAACA,MAAK,GAAIA,MAAM;IAEpBG,KAAK,uCAAgCH,MAAM,GAAI;MAC7CI,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE;IACf,CAAC,EACEe,IAAI,CAAC,UAACd,QAAQ;MAAA,OAAKA,QAAQ,CAACe,IAAI,EAAE;IAAA,GAClCD,IAAI,CAAC,UAACtB,IAAI,EAAK;MACd,MAAI,CAACC,IAAG,GAAID,IAAI,CAACC,IAAI;IACvB,CAAC,UACK,CAAC,UAACa,KAAK,EAAK;MAChBJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN;AACF,CAAC","names":["name","data","body","postId","methods","deletePost","fetch","method","credentials","response","ok","console","log","$router","push","error","updatePost","headers","JSON","stringify","mounted","$route","params","then","json"],"sourceRoot":"","sources":["C:\\Users\\davidjaa\\Documents\\WAD\\WAD2023-HW4-Frotend\\src\\views\\Post.vue"],"sourcesContent":["<template>\r\n  <div class=\"form\">\r\n    <h3>A Post</h3>\r\n    <label for=\"body\">Post Body</label>\r\n    <textarea name=\"body\" required v-model=\"body\"></textarea>\r\n    <div class=\"container\">\r\n      <button @click=\"updatePost()\" class=\"center\">Update</button>\r\n      <button @click=\"deletePost()\" class=\"center\">Delete</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Post',\r\n  data() {\r\n    return {\r\n      body: '',\r\n      postId: null,\r\n    };\r\n  },\r\n  methods: {\r\n    async deletePost() {\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/posts/${this.postId}`, {\r\n          method: 'DELETE',\r\n          credentials: 'include',\r\n        });\r\n\r\n        if (response.ok) {\r\n          console.log('Post deleted successfully');\r\n          // Navigate back to the home view after deletion\r\n          this.$router.push('/');\r\n        } else {\r\n          console.error('Failed to delete post');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error deleting post:', error);\r\n      }\r\n    },\r\n\r\n    async updatePost() {\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/posts/${this.postId}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify({ body: this.body }),\r\n        });\r\n\r\n        if (response.ok) {\r\n          console.log('Post updated successfully');\r\n          // Navigate back to the home view after updating\r\n          this.$router.push('/');\r\n        } else {\r\n          console.error('Failed to update post');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating post:', error);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // Fetch the post details when the component is mounted\r\n    const postId = this.$route.params.postId;\r\n    this.postId = postId;\r\n\r\n    fetch(`http://localhost:3000/posts/${postId}`, {\r\n      method: 'GET',\r\n      credentials: 'include',\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.body = data.body;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching post details:', error);\r\n      });\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\nh3 {\r\n  text-align: center;\r\n  color: rgb(8, 110, 110);\r\n}\r\n.form {\r\n  max-width: 420px;\r\n  margin: 30px auto;\r\n  background: rgb(216, 212, 212);\r\n  text-align: left;\r\n  padding: 40px;\r\n  border-radius: 10px;\r\n}\r\nlabel {\r\n  color: rgb(8, 110, 110);\r\n  display: inline-block;\r\n  margin: 25px 0 15px;\r\n  font-size: 0.8em;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n}\r\ntextarea {\r\n  display: block;\r\n  padding: 10px 6px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-bottom: 1px solid white;\r\n}\r\nbutton {\r\n  background: rgb(8, 110, 110);\r\n  border: 0;\r\n  padding: 10px 20px;\r\n  margin-top: 20px;\r\n  color: white;\r\n  border-radius: 20px;\r\n  align-items: center;\r\n  text-align: center;\r\n}\r\n.center {\r\n  margin: auto;\r\n  border: 0;\r\n  padding: 10px 20px;\r\n  margin-top: 20px;\r\n  width: 30%;\r\n}\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}