{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-66b2084c\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"form\"\n};\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h3\", null, \"A Post\", -1 /* HOISTED */);\n});\nvar _hoisted_3 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"label\", {\n    \"for\": \"body\"\n  }, \"Post Body\", -1 /* HOISTED */);\n});\nvar _hoisted_4 = {\n  \"class\": \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _withDirectives(_createElementVNode(\"textarea\", {\n    name: \"body\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.body = $event;\n    })\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.body]]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $options.updatePost();\n    }),\n    \"class\": \"center\"\n  }, \"Update\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = function ($event) {\n      return $options.deletePost();\n    }),\n    \"class\": \"center\"\n  }, \"Delete\")])]);\n}","map":{"version":3,"mappings":";;;;;EACO,SAAM;AAAM;;sBACfA,oBAAe,YAAX,QAAM;AAAA;;sBACVA,oBAAmC;IAA5B,OAAI;EAAM,GAAC,WAAS;AAAA;;EAEtB,SAAM;AAAW;;uBAJxBC,oBAQM,OARNC,UAQM,GAPJC,UAAe,EACfC,UAAmC,kBACnCJ,oBAAyD;IAA/CK,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAR,EAAQ;;aAAUC,UAAI;IAAA;iDAAJA,UAAI,KAC5CP,oBAGM,OAHNQ,UAGM,GAFJR,oBAA4D;IAAnDS,OAAK;MAAA,OAAEC,mBAAU;IAAA;IAAI,SAAM;KAAS,QAAM,GACnDV,oBAA4D;IAAnDS,OAAK;MAAA,OAAEC,mBAAU;IAAA;IAAI,SAAM;KAAS,QAAM","names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","name","required","$data","_hoisted_4","onClick","$options"],"sourceRoot":"","sources":["C:\\Users\\davidjaa\\Documents\\WAD\\WAD2023-HW4-Frotend\\src\\views\\Post.vue"],"sourcesContent":["<template>\r\n  <div class=\"form\">\r\n    <h3>A Post</h3>\r\n    <label for=\"body\">Post Body</label>\r\n    <textarea name=\"body\" required v-model=\"body\"></textarea>\r\n    <div class=\"container\">\r\n      <button @click=\"updatePost()\" class=\"center\">Update</button>\r\n      <button @click=\"deletePost()\" class=\"center\">Delete</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Post',\r\n  data() {\r\n    return {\r\n      body: '',\r\n      postId: null,\r\n    };\r\n  },\r\n  methods: {\r\n    async deletePost() {\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/posts/${this.postId}`, {\r\n          method: 'DELETE',\r\n          credentials: 'include',\r\n        });\r\n\r\n        if (response.ok) {\r\n          console.log('Post deleted successfully');\r\n          // Navigate back to the home view after deletion\r\n          this.$router.push('/');\r\n        } else {\r\n          console.error('Failed to delete post');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error deleting post:', error);\r\n      }\r\n    },\r\n\r\n    async updatePost() {\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/posts/${this.postId}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify({ body: this.body }),\r\n        });\r\n\r\n        if (response.ok) {\r\n          console.log('Post updated successfully');\r\n          // Navigate back to the home view after updating\r\n          this.$router.push('/');\r\n        } else {\r\n          console.error('Failed to update post');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating post:', error);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // Fetch the post details when the component is mounted\r\n    const postId = this.$route.params.postId;\r\n    this.postId = postId;\r\n\r\n    fetch(`http://localhost:3000/posts/${postId}`, {\r\n      method: 'GET',\r\n      credentials: 'include',\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.body = data.body;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching post details:', error);\r\n      });\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\nbody{\r\n  margin: 20px 40px;\r\n  font-size: 1.2rem;\r\n  letter-spacing: 1px;\r\n  background: #fafafa;\r\n  position: relative;\r\n}\r\n.post-list{\r\n  margin-bottom: 5px;\r\n  padding: 3px 5px;\r\n}\r\n.date{\r\n    margin: 0;\r\n  padding: 0;\r\n  font-family: 'Quicksand', sans-serif;\r\n  color: #444;\r\n  text-align: right;\r\n}\r\n\r\nh1, h2, h3, h4, ul, li, a, input, label, button, div, footer{\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: 'Quicksand', sans-serif;\r\n  color: #444;\r\n}\r\nnav{\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  margin-bottom: 80px;\r\n}\r\ninput{\r\n  padding: 10px 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ddd;\r\n  font-size: 1em;\r\n  width: 100%;\r\n}\r\nlabel{\r\n  display: block;\r\n  margin: 20px 0 10px;\r\n}\r\nbutton{\r\n  margin-top: 30px;\r\n  border-radius: 36px;\r\n  background: #FEE996;\r\n  border:0;\r\n  font-weight: 700;\r\n  font-size: 0.8em;\r\n  display: block;\r\n  padding: 10px 16px;\r\n  letter-spacing: 2px;\r\n}\r\nnav{\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.post {\r\n  background: rgb(189, 212, 199);\r\n  border-radius: 10px;\r\n    width: 80%;\r\n    position: relative;\r\n    padding: 20px;\r\n    margin: 5px auto;\r\n    text-align: left;\r\n}\r\n.center {\r\n  margin: auto;\r\n  border: 0;\r\n  padding: 10px 20px;\r\n  margin-top: 20px;\r\n  margin: 10px auto;\r\n  width: 30%; \r\n}\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}